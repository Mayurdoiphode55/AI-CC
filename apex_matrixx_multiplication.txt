public class MatrixMultiplication {

    // Static method to multiply two matrices and return the result
    public static List<List<Integer>> multiply(List<List<Integer>> A, List<List<Integer>> B) {
        Integer rowsA = A.size();
        Integer colsA = A[0].size();
        Integer rowsB = B.size();
        Integer colsB = B[0].size();

        if (colsA != rowsB) {
            throw new IllegalArgumentException('Matrix A columns must equal Matrix B rows');
        }

        List<List<Integer>> result = new List<List<Integer>>();

        for (Integer i = 0; i < rowsA; i++) {
            List<Integer> row = new List<Integer>();
            for (Integer j = 0; j < colsB; j++) {
                Integer sum = 0;
                for (Integer k = 0; k < colsA; k++) {
                    sum += A[i][k] * B[k][j];
                }
                row.add(sum);
            }
            result.add(row);
        }

        return result;
    }
}



input:

List<List<Integer>> A = new List<List<Integer>>{
    new List<Integer>{1, 2},
    new List<Integer>{3, 4}
};

List<List<Integer>> B = new List<List<Integer>>{
    new List<Integer>{5, 6},
    new List<Integer>{7, 8}
};

List<List<Integer>> result = MatrixMultiplication.multiply(A, B);

System.debug('Resulting Matrix:');
for (List<Integer> row : result) {
    System.debug(row);
}
